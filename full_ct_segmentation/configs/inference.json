{
    "imports": [
        "$import glob",
        "$import os",
        "$import sys"
    ],
    "bundle_root": "/content/full_ct_segmentation",
    "output_dir": "$@bundle_root + '/eval'",
    "dataset_dir": "/content/data",
    "datalist": "$list(sorted(glob.glob(@dataset_dir + '/imagesTs/*.nii.gz')))",
    "device": "$torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')",
    "network_def": {
        "_target_": "SegResNet",
        "spatial_dims": 3,
        "init_filters": 32,
        "in_channels": 1,
        "out_channels": 105,
        "dropout_prob": 0.2,
        "blocks_down": [
            1,
            2,
            2,
            4
        ],
        "blocks_up": [
            1,
            1,
            1
        ]
    },
    "network": "$@network_def.to(@device)",
    "preprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "LoadImaged",
                "keys": "image"
            },
            {
                "_target_": "EnsureTyped",
                "keys": "image"
            },
            {
                "_target_": "EnsureChannelFirstd",
                "keys": "image"
            },
            {
                "_target_": "Spacingd",
                "keys": "image",
                "pixdim": [
                    1.5,
                    1.5,
                    1.5
                ],
                "mode": "bilinear"
            },
            {
                "_target_": "NormalizeIntensityd",
                "keys": "image"
            },
            {
                "_target_": "GaussianSmoothd",
                "keys": "image",
                "sigma": 0.4
            },
            {
                "_target_": "ScaleIntensityd",
                "keys": "image",
                "minv": -1.0,
                "maxv": 1.0
            }
        ]
    },
    "dataset": {
        "_target_": "Dataset",
        "data": "$[{'image': i} for i in @datalist]",
        "transform": "@preprocessing"
    },
    "dataloader": {
        "_target_": "DataLoader",
        "dataset": "@dataset",
        "batch_size": 1,
        "shuffle": false,
        "num_workers": 1
    },
    "inferer": {
        "_target_": "SlidingWindowInferer",
        "roi_size": [
            96,
            96,
            96
        ],
        "sw_batch_size": 1,
        "overlap": 0.4,
        "padding_mode": "replicate",
        "mode": "gaussian",
        "sw_device": "cuda",
        "device": "cpu"
    },
    "postprocessing": {
        "_target_": "Compose",
        "transforms": [
            {
                "_target_": "EnsureTyped",
                "keys": "image"
            },
            {
                "_target_": "Activationsd",
                "keys": "pred",
                "softmax": true
            },
            {
                "_target_": "AsDiscreted",
                "keys": "pred",
                "argmax": true
            },
            {
                "_target_": "KeepLargestConnectedComponentd",
                "keys": "pred"
            },
            {
                "_target_": "SaveImaged",
                "keys": "pred",
                "output_dir": "@output_dir"
            }
        ]
    },
    "handlers": [
        {
            "_target_": "CheckpointLoader",
            "load_path": "$@bundle_root + '/models/model.pt'",
            "load_dict": {
                "model": "@network"
            }
        },
        {
            "_target_": "StatsHandler",
            "iteration_log": false
        }
    ],
    "evaluator": {
        "_target_": "SupervisedEvaluator",
        "device": "@device",
        "val_data_loader": "@dataloader",
        "network": "@network",
        "inferer": "@inferer",
        "postprocessing": "@postprocessing",
        "val_handlers": "@handlers",
        "amp": true
    },
    "evaluating": [
        "$setattr(torch.backends.cudnn, 'benchmark', True)",
        "$@evaluator.run()"
    ]
}
